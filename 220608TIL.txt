오늘 배운 내용
노마드코더 코코아톡 클론 코딩 강의

#3.9 Inline Block
block은 옆에 아무것도 올 수 없음

ㅡ> inline : wdt, hgt 무시돼서 무언가 추가하지 않는 이상 아무것도 안보임
ㅡ> inline-block : 위 문제를 해결할 수 있어서 좋긴 한데, 반응형 디자인 지원되지 않음(각 기기마다 만족하는 최적값을 일일히 찾아야 함
예 :10.5 ,10.4 ,10.3, ...... 10.01, ......10.08, 10.05,..10.05!)

ㅡ> 이 문제를 해결할 수 있는게 flex

#3.10 Flexbox Part One

display에서 inline-blcck의 문제점이 많이 발견된 후
Flexbox를 고안했다.
어디든 자유롭게 box를 둘 수 있다.
flexbox는 이름자체가 flexibe이다 2차원 레이아웃에서 아주 잘 작동한다.
지켜야할 규칙들이 있다 3가지의 rule

1) 자식 엘리먼트에는 어떤 것도 적지 말아야 한다.
부모 엘리먼트에만 명시해야한다.
나중에 이해하게 될것
부모 엘리먼트에만 말을 한다
3개의 dvi를 가리키는 자식을 움직이고 싶으면 flex를 할 필요없다
div의 부모에게 말하면된다 즉 body! body가 의 부모다
부모에게만 명시하면된다
부모 엘리먼트를 flex container로 만들어야한다
즉 body의 display가 flex를 주면된다
이제 body가 children을 제어할 수 있다
※ Rule no1. flex는 부모의 display 속성에 해야한다 절대 자식에하는것이 아니다!
display : flex

많은 속성들을 수정할 수 있게 된다
justify-content 등을 줘서 규칙적으로 둘 수 있다
모든 계산을 다 알아서 해준다.
얼마나 빈 공간을 줄지 이런것들을 자동적으로 계산해준다 so cool!

2) 주축 (main axis)과 3) 교차축 (cross axis)
Flex Container는 두개의 축을 가지고 있다 이것이 main axis와 cross axis이다.

justify-content 는 주축 즉 평행(디폴트값이다)으로 움직이고 (main axis를 움직임)
align-items는 교차축 (디폴트는 수직)으로 움직인다. (cross axis를 움직임)

※디폴트 값은 바뀔 수 있다.




1. 자식에게 명시하지 않고 부모에게 명시한다
div의 부모를 display:flex로 만든다
2. main axis=> 주축은 (수평)이 기본, justify-content는 main axis를 따라 움직임
3. cross axis=> 교차축은 (수직)이 기본, align-items는 cross axis를 따라 움직임
4. body가 height 값을 갖고있지 않으면 이미 맨 위아래를 차지하고 중심에 있으니까 align-items를 설정하더라도 바뀌지 않음.
이 때 height를 px로 해도 작동하지만, vh를 사용하면 화면 크기에 따라 바뀐다. 아이폰 맥북 아이패드에 따라 다 달라지니까 유용하다.




